{
  "name": "bases",
  "version": "0.1.1",
  "description": "Utility for converting numbers to different bases/alphabets.",
  "author": {
    "name": "Aseem Kishore",
    "email": "aseem.kishore@gmail.com"
  },
  "homepage": "https://github.com/aseemk/bases.js",
  "keywords": [
    "alphabet",
    "base",
    "base-36",
    "base-58",
    "base-62"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/aseemk/bases.js.git"
  },
  "main": "bases.js",
  "dependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "node test"
  },
  "readme": "# bases.js\n\nUtility for converting numbers to different bases/alphabets. Common bases have\nconvenience aliases (see below), but arbitrary/custom alphabets can be used.\n\n\nE.g. base-2 uses an alphabet of `01`, base-16 `0123456789abcdef` (notice the\nletters are lowercase), base-36 continues to `z`, base-62 adds the uppercase\nletters\n\n## Installation\n\n```\nnpm install bases\n```\n\n## Usage\n\n```js\nvar bases = require('./bases');\n\nbases.toBase16(200);                // => 'c8'\nbases.toBase62(99999);              // => 'q0T'\nbases.toAlphabet(300, 'aAbBcC');    // => 'Abba'\n```\n\n## API\n\n- `toAlphabet(num, alphabet)`: returns a string representation of the given\n  number for the given alphabet, where the alphabet is an arbitrary string of\n  characters. (See known alphabets below for examples.)\n\n- `toBase(num, base)`: convenience helper for known bases (see below).\n\n- `toBaseX(num)`: convenience helpers for known bases (see below), e.g.\n  `toBase62(num)`.\n\n## Known Bases/Alphabets\n\n- Numbers: **base-2** (`01`) through **base-10** (`0123456789`).\n\n- Letters: **base-26** (`abcdefghijklmnopqrstuvwxyz`, notice lowercase only)\n  and **base-52** (adds uppercase, i.e. `abc...xyzABC...XYZ`).\n\n- Numbers and letters: base-11 (base-10 + `a`) through **base-16**\n  (base-10 + `abcdef`), **base-36** (base-10 + base-26) and **base-62**\n  (base-10 + base-52).\n\n- Human-friendly: **base-32** as specified by\n  [Douglas Crockford](http://www.crockford.com/wrmg/base32.html) (base-10 +\n  uppercase base-26 - `IOLU`) and **base-58** as specified\n  by [Flickr](http://www.flickr.com/groups/api/discuss/72157616713786392/)\n  (base-62 - `0lIO`).\n\n- **Base-64** <del>[as standardized](http://en.wikipedia.org/wiki/Base64)</del>\n  (`ABC...XYZabc...xyz012...789+/`). Besides there being many different\n  standards, padding isn't currently added and line lengths aren't tracked.\n  Not recommended for use with APIs that expect formal base-64 strings!\n  \n## License\n\n[MIT license](http://aseemk.mit-license.org/). (c) 2012 Aseem Kishore.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/aseemk/bases.js/issues"
  },
  "_id": "bases@0.1.1",
  "dist": {
    "shasum": "903c22e23eb4b2750f2921d03d6bd3254c6e5f21"
  },
  "_from": "bases@",
  "_resolved": "https://registry.npmjs.org/bases/-/bases-0.1.1.tgz"
}
