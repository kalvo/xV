{
  "name": "mid-tile",
  "version": "0.0.0",
  "description": "meta meta tiles",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": "",
  "author": "",
  "license": "BSD",
  "dependencies": {
    "mbtiles": "~0.2.8",
    "lodash": "~1.2.1",
    "sphericalmercator": "~1.0.2",
    "queue": "~1.0.0",
    "queue-async": "~1.0.3"
  },
  "readme": "# mid-tile\n\nA mid-level abstraction for making [MBTiles](http://www.mbtiles.org/) from\nanything. Uses [node-mbtiles](https://github.com/mapbox/node-mbtiles)\nfor the hard parts, and makes things just easy enough, I hope.\n\n## complete example\n\nThis creates a tileset of tiles that just say their tile number as an image,\nusing [node-canvas](https://github.com/LearnBoost/node-canvas).\n\n```js\nvar midTile = require('./');\n\nvar Canvas = require('canvas'),\n    canvas = new Canvas(256, 256),\n    ctx = canvas.getContext('2d');\n\nmidTile('myfile.mbtiles', {\n    name: 'My File',\n    bounds: [-179, -80, 179, 80]\n}, function(xyz, mbtiles, cb) {\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(0, 0, 256, 256);\n    ctx.fillStyle = '#000';\n    ctx.fillText(xyz.join('/'), 50, 50);\n    mbtiles.putTile(\n        xyz[0], xyz[1], xyz[2],\n        canvas.toBuffer(), function(err) {\n        cb();\n    });\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "mid-tile@0.0.0",
  "dist": {
    "shasum": "873aaefdb00eeefe445d12467f85955095faf3bd"
  },
  "_from": "mid-tile@",
  "_resolved": "https://registry.npmjs.org/mid-tile/-/mid-tile-0.0.0.tgz"
}
